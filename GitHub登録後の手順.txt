ステップ1.リポジトリを作成する
リポジトリは通常、単一のプロジェクトを編成するために使用されます。リポジトリには、フォルダーとファイル、画像、ビデオ、スプレッドシート、データセットなど、プロジェクトに必要なものをすべて含めることができます。 README、またはプロジェクトに関する情報を含むファイルを含めることをお勧めします。 GitHubを使用すると、新しいリポジトリを作成するのと同時に簡単に追加できます。ライセンスファイルなど、他の一般的なオプションも提供します。
hello-worldリポジトリは、アイデア、リソースを保存したり、他の人と物事を共有したり話し合ったりする場所にすることができます。
新しいリポジトリを作成するには
右上隅のアバターまたはIDアイコンの横にあるをクリックし、[新しいリポジトリ]を選択します。
リポジトリにhello-worldという名前を付けます。
短い説明を書きます。
READMEでこのリポジトリを初期化するを選択します。

「リポジトリーの作成」をクリックします。

ステップ2.ブランチを作成する
ブランチとは、リポジトリの異なるバージョンを同時に処理する方法です。
デフォルトでは、リポジトリにはmasterという名前のブランチが1つあり、これが最も信頼できるブランチと見なされます。ブランチを使用して、マスターにコミットする前に実験と編集を行います。
マスターブランチからブランチを作成すると、その時点でのマスターのコピーまたはスナップショットが作成されます。ブランチの作業中に他の誰かがマスターブランチに変更を加えた場合、それらの更新を取り込むことができます。
この図は次のことを示しています。
マスターブランチ
featureと呼ばれる新しいブランチ（このブランチで「機能作業」を行っているため）
機能がマスターに統合される前の機能の旅

ファイルの異なるバージョンを保存したことがありますか？何かのようなもの：
story.txt
story-joe-edit.txt
story-joe-edit-reviewed.txt
ブランチは、GitHubリポジトリで同様の目標を達成します。
ここGitHubでは、開発者、ライター、およびデザイナーがブランチを使用して、バグ修正と機能作業をマスター（本番）ブランチから分離しています。変更の準備ができると、ブランチをマスターにマージします。
新しいブランチを作成するには
新しいリポジトリhello-worldに移動します。
ファイルリストの上部にある、branch：masterというドロップダウンをクリックします。
新しいブランチのテキストボックスにブランチ名readme-editsを入力します。
青い[作成]ブランチボックスを選択するか、キーボードのEnterキーを押します。

これで、masterとreadme-editsの2つのブランチができました。それらはまったく同じに見えますが、長くはありません！次に、新しいブランチに変更を追加します。

ステップ3.変更を加えてコミットする
ブラボー！これで、マスターのコピーであるreadme-editsブランチのコードビューが表示されました。いくつか編集してみましょう。
GitHubでは、保存された変更はコミットと呼ばれます。各コミットには、関連するコミットメッセージがあります。これは、特定の変更が行われた理由を説明する説明です。コミットメッセージは変更の履歴をキャプチャするため、他の寄稿者はあなたが何をしたのか、またその理由を理解できます。
変更を加えてコミットする
README.mdファイルをクリックします。
編集するファイルビューの右上隅にある鉛筆アイコンをクリックします。
に

これらの変更は、readme-editsブランチのREADMEファイルに対してのみ行われるため、このブランチにはマスターとは異なるコンテンツが含まれています。

ステップ4.プルリクエストを開く
素敵な編集！これでマスターからのブランチに変更が加えられたので、プルリクエストを開くことができます。
プルリクエストは、GitHubのコラボレーションの中心です。プルリクエストを開くと、変更を提案し、誰かがコントリビューションを確認してプルし、ブランチにマージするように要求します。プルリクエストは、両方のブランチからのコンテンツの差分、つまり違いを示します。変更、追加、および減算は、緑と赤で表示されます。
コミットを行うとすぐに、コードが終了する前でも、プルリクエストを開いてディスカッションを開始できます。
プルリクエストメッセージでGitHubの@メンションシステムを使用することで、特定のユーザーまたはチームがホールにいるのか、10タイムゾーン離れているのかをフィードバックすることができます。
自分のリポジトリでプルリクエストを開いて、自分でマージすることもできます。これは、大規模なプロジェクトに取り組む前にGitHubフローを学ぶのに最適な方法です。
READMEへの変更のプルリクエストを開く
画像をクリックすると拡大されます

[プルリクエスト]タブをクリックし、[プルリクエスト]ページで緑色の[新しいプルリクエスト]ボタンをクリックします。

比較例ボックスで、作成したブランチreadme-editsを選択して、マスター（オリジナル）と比較します。

「比較」ページで差分の変更を確認し、それらが送信したいものであることを確認してください。

送信したい変更が完了したら、大きな緑色の[プルリクエストの作成]ボタンをクリックします。

プルリクエストにタイトルを付け、変更の簡単な説明を書きます。

メッセージが完了したら、[プルリクエストを作成]をクリックします。

ヒント：絵文字を使用して、画像やGIFをコメントやプルリクエストにドラッグアンドドロップできます。

ステップ5.プルリクエストをマージする
この最後のステップでは、変更をまとめます。readme-editsブランチをmasterブランチにマージします。
緑色のマージプルリクエストボタンをクリックして、変更をマスターにマージします

[マージの確認]をクリックします。
変更が組み込まれているため、紫色のボックスにある[ブランチの削除]ボタンを使用して、ブランチを削除します。

おめでとう！
このチュートリアルを完了することで、プロジェクトを作成し、GitHubでプルリクエストを行う方法を学びました。
このチュートリアルで行ったことは次のとおりです。
オープンソースのリポジトリを作成しました
新しいブランチを開始して管理しました
ファイルを変更し、それらの変更をGitHubにコミットしました
プルリクエストを開いてマージしました
GitHubプロフィールを確認すると、新しい貢献広場が表示されます。
プルリクエストの機能の詳細については、GitHubフローガイドを読むことをお勧めします。 
GitHub Exploreにアクセスして、オープンソースプロジェクトに参加することもできます。